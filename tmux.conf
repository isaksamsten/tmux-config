set -g base-index 1
setw -g pane-base-index 1

set-option -g  mouse on
set-window-option -gq utf8 on
set-window-option -g  monitor-activity on
set-window-option -g  mode-keys vi
set-window-option -g  automatic-rename on


set -g status "on"
set -g status-position "top"
set -g status-left '        '
set -g status-justify left
set -g status-style fg="default",bg="default"
set -g status-interval 2

set -g status-right "#[fg=colour5, bg=default]#[fg=colour0, bg=colour5] #{hostname_short} #[fg=colour5, bg=default] #[fg=colour5, bg=default]#[fg=colour0, bg=colour5] #($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load -a0 -g0 -t1 --interval 2) #[fg=colour5, bg=default]"
setw -g window-status-current-style "fg=default bg=default bold"
setw -g window-status-current-format "#[fg=default,fg=default]#[fg=default, bg=default] #I #W #[fg=colour8]#{s|$HOME|~|;s|/.*/||:pane_current_path} #[fg=default,bg=default]"

setw -g window-status-style "bg=default fg=default"
setw -g window-status-format "#[bg=default,fg=colour7]#[fg=colour7, bg=default] #I #W #[fg=colour8]#{s|$HOME|~|;s|/.*/||:pane_current_path} #[fg=default,bg=default]"

setw -g window-status-bell-style 'fg=colour255 bg=colour0 bold'

# messages
set -g message-style "fg=default bg=default bold"
set -g mode-style "fg=default bg=default bold"

set -g pane-active-border-style "fg=colour8 bg=default"
set -g pane-border-style "bg=default fg=colour8"
set -g popup-border-style "bg=default fg=colour8"
set -g mode-style "bg=colour8 fg=default"

set -s extended-keys on

set -g visual-activity off
set -g visual-bell off
set -g visual-silence on
set -g visual-activity off
set -g visual-bell off
set -g main-pane-width 65%
# set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none
set-option -g renumber-windows on
set -g default-terminal "tmux-256color"
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM
set -sg terminal-overrides ",*:RGB"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set-option -g allow-passthrough on
set -g set-clipboard on

# decide whether we're in a Vim process
# is_vim="tty=#{pane_tty} ; pgrep -t \${tty#/dev/} 'g?(view|n?vim?x?)(diff)?$' >/dev/null 2>&1"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_shell="ps h -o comm -t '#{pane_tty}' | \
    tail -n1 | \
    grep -iqE '^((ba|da|fi|z)?sh)$'"

wisely_confirm_before_close="if -F '#{<=:#{window_panes},1}' \
    \"confirm kill-pane\" \
    \"if \\\"$is_shell\\\" \
    'kill-pane' \
    'confirm kill-pane'\""

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -n C-w if-shell "$is_vim" "send-keys C-w" "switch-client -Ttable1"
bind-key -r -Ttable1 'C-h' resize-pane -L
bind-key -r -Ttable1 'C-j' resize-pane -D
bind-key -r -Ttable1 'C-k' resize-pane -U
bind-key -r -Ttable1 'C-l' resize-pane -R
bind-key -Ttable1 '\' select-pane -l
bind-key -Ttable1 's' split-window -v
bind-key -Ttable1 'v' split-window -h
bind-key -Ttable1 'q' confirm-before -p "Confirm close (y/n)" kill-window
bind-key -Ttable1 = select-layout tiled
bind-key -Ttable1 'C-w' send-keys C-w

bind-key s split-window -v
bind-key v split-window -h

bind-key -n M-p display-menu -x C -y C \
    -T '#[align=centre]Select Layout' \
    'Tiled'           +  { select-layout tiled } \
    'Main Horizontal' _  { select-layout main-horizontal } \
    'Main Vertical'   |  { select-layout main-vertical } \
    'Even Horizontal' \\ { select-layout even-horizontal } \
    'Even Vertical'   -  { select-layout even-vertical }


# bind-key Enter popup -E -d "#{pane_current_path}" $SHELL
bind-key BSpace set-option status
# bind-key Enter display-popup -E "tmux new-session -A -s scratch"
bind-key Enter if-shell -F '#{==:#{session_name},scratch}' {
    detach-client
  } {
    if-shell "tmux has-session -t scratch" {
      display-popup -E -w 80% -h 60% "tmux attach-session -t scratch"
    } {
      display-popup -E -w 80% -h 60% "tmux new-session -d -c '#{pane_current_path}' -s scratch && tmux set-option -t scratch status off && tmux attach-session -t scratch"
    }
}

bind-key a if-shell -F '#{==:#{session_name},llm}' {
    detach-client
  } {
    if-shell "tmux has-session -t llm" {
      display-popup -E -w 80% -h 60% "tmux attach-session -t llm"
    } {
      display-popup -E -w 80% -h 60% "tmux new-session -d  -c '#{pane_current_path}' -s llm llm chat && tmux set-option -t llm status off && tmux attach-session -t llm"
    }
}

set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tony-sol/tmux-current-pane-hostname'
set -g @plugin 'jhornsberger/tmux-relative-layout'
set -g @plugin 'thewtex/tmux-mem-cpu-load'

set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
set -g @scroll-speed-num-lines-per-scroll "1"
set -g @menus_trigger 'C-\'

set-option -g @main_pane_height_percent "70"
set-option -g @main_pane_width_percent "66"

run '~/.config/tmux/plugins/tpm/tpm'
set-option -g set-titles on
set-option -g set-titles-string "#W (#{s|$HOME|~|;s|/.*/|/…/|:pane_current_path})"
# vim:set et sw=4 ts=4 fdm=marker:
